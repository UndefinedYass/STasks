<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:View="clr-namespace:STasks.View"
    xmlns:Model="clr-namespace:STasks.Model"
    xmlns:Explorer="clr-namespace:STasks.Model.Explorer"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:STasks"
    
     xmlns:Custom="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:ViewModel="clr-namespace:STasks.ViewModel"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:Converters="clr-namespace:Converters"
    xmlns:TemplateSelectors="clr-namespace:STasks.View.TemplateSelectors"
    xmlns:attached="clr-namespace:STasks.View.Attached"
    xmlns:Converters1="clr-namespace:STasks.Common.Converters" x:Class="STasks.MainWindow"
        mc:Ignorable="d"
    
        Title="{Binding LoadedSemester.Name, FallbackValue=Stasks, StringFormat=\{0\} - STasks}"
    x:Name="window"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        d:DataContext="{d:DesignInstance {x:Type ViewModel:MainViewModel}, IsDesignTimeCreatable=True}" 
    TextOptions.TextFormattingMode="Display" UseLayoutRounding="True" SnapsToDevicePixels="True" 
    d:DesignWidth="701" Height="500" Width="760" Icon="Media/AppIcon/mainWindowIcon.png"
    attached:DevMacros.IsEnabled="True"
    >

    <Window.Resources>
        <Converters1:FileAttributesToImageSourceConverter x:Key="FileAttributesToImageSourceConverter"/>
        <Converters1:FolderAttributesToImageSourceConverter x:Key="FolderAttributesToImageSourceConverter"/>
        <TemplateSelectors:MMTabContentTemplateSelector x:Key="MMTabContentTemplateSelector"/>
        <Converters:BooleanToVisibilityInverted x:Key="BooleanToVisibilityInverted"/>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <DataTemplate x:Key="HomeTabContentTemplate">
            <View:HomeView DataContext="{Binding DataContext, ElementName=window}"/>
        </DataTemplate>

        <DataTemplate x:Key="ClassTabContentTemplate">
            <View:ClassView />
        </DataTemplate>

        <ItemsPanelTemplate x:Key="ClassCardsListBoxPanelTemplate">
            <WrapPanel IsItemsHost="True"/>
        </ItemsPanelTemplate>
        <Style x:Key="ClassCardsListBoxItemContainerTemplate" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" ClipToBounds="{TemplateBinding ClipToBounds}" Margin="4">

                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="TabItemHeaderTemplateMi">
            <Grid>
                <TextBlock Text="zezz"/>
            </Grid>
        </DataTemplate>


        <Style x:Key="TabItemStyle"  TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBodyLight}"/>
            <Setter Property="Padding" Value="6,1,6,1"/>

            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="HeaderTemplate" >
                <Setter.Value>
                    <DataTemplate DataType="ViewModel:ITabContent" >

                        <StackPanel Orientation="Horizontal">
                            <StackPanel.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Command="{Binding RequireCompletionCommand}" CommandParameter="{StaticResource TrueBool}" Header="Complete all"/>
                                    <MenuItem Command="{Binding RequireCompletionCommand}" CommandParameter="{StaticResource FalseBool}" Header="Reset all"/>
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                            <TextBlock x:Name="Had" Text="{Binding Title}" Margin="0,10,2,10" FontWeight="Bold"/>
                            <materialDesign:PackIcon VerticalAlignment="Center" Kind="Asterisk" Width="10" Height="10" Visibility="{Binding IsDirty, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <!--Button Visibility="{Binding IsSpecialHomeTab,Converter={StaticResource BooleanToVisibilityInverted}}" Name="closebutt" VerticalAlignment="Center" Padding="0" Height="Auto">
                                <materialDesign:PackIcon Kind="Close" Width="14" Height="14"/>
                            </-->
                        </StackPanel>
                        <DataTemplate.Triggers>
                            <DataTrigger  Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TabItem}}}" Value="true">
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Foreground" TargetName="Had"  Value="{DynamicResource PrimaryHueMidBrush}"/>
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" TargetName="Had"  Value="{DynamicResource PrimaryHueLightBrush}" />
                            </Trigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplateSelector" Value="{StaticResource MMTabContentTemplateSelector}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid SnapsToDevicePixels="true">
                            <Border x:Name="Bd" BorderThickness="1,1,1,0" Padding="{TemplateBinding Padding}" Background="#00000000">
                                <ContentPresenter x:Name="Content" ContentSource="Header" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <DockPanel Loaded="DockPanel_Loaded">
        <Grid x:Name="MENU" DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="100"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="1" Style="{DynamicResource MaterialDesignFlatButton}" Padding="2" Width="28" Height="28" HorizontalAlignment="Right" Margin="0,0,4,0" >
                <materialDesign:PackIcon Width="26" Height="26" Foreground="{DynamicResource MaterialDesignBody}" Kind="Menu"/>
            </Button>
            <Menu materialDesign:RippleAssist.IsDisabled="True" materialDesign:TransitionAssist.DisableTransitions="True" Padding="0"  x:Name="menu" HorizontalAlignment="Left" Grid.RowSpan="2" VerticalAlignment="Top" FontSize="12">
                <MenuItem Header="File" Padding="8,4" Height="28">
                    <MenuItem Header="Load Session" HorizontalAlignment="Left"/>
                    <MenuItem Header="Save session" Command="{Binding SaveSemesterCommand}" HorizontalAlignment="Left"/>
                    <MenuItem Header="Save session as" Command="{Binding SaveSemesterAsCommand}" HorizontalAlignment="Left"/>
                </MenuItem>
                <MenuItem Header="Edit" Height="28" Padding="8,4"/>
                <MenuItem Header="View" Height="28" Padding="8,4">
                    <MenuItem Header="Workspace explorer" HorizontalAlignment="Left" IsCheckable="True" IsChecked="{Binding IsExplorerPanelVisible, Mode=TwoWay}"/>
                    <MenuItem Header="Stats panel" HorizontalAlignment="Left" IsCheckable="True" IsChecked="{Binding IsStatsPanelVisible, Mode=TwoWay}"/>
                </MenuItem>
                <MenuItem Header="Task" Height="28" Padding="8,4"/>
                <MenuItem Header="Help" Height="28" Padding="8,4"/>
            </Menu>

        </Grid>
        <Border x:Name="Explorer" Loaded="Explorer_Loaded" DockPanel.Dock="Right" Width="260" BorderBrush="{DynamicResource MaterialDesignDivider}" BorderThickness="1" Visibility="{Binding IsExplorerPanelVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid  >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Grid Height="32" VerticalAlignment="Top" Background="#FFF3F3F3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1">
                        <Button x:Name="button" Command="{Binding ShowHidePanelCommand}" CommandParameter="ExplorerPanel:false" Style="{DynamicResource MaterialDesignFlatButton}" Foreground="{DynamicResource MaterialDesignBody}"  HorizontalAlignment="Center" Padding="0" VerticalAlignment="Center" Height="18" Width="18" Margin="4" >
                            <Custom:PackIconBootstrapIcons Kind="X" Width="10" Height="10"/>
                        </Button>
                    </StackPanel>
                    <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Margin="10,0,0,0" TextWrapping="Wrap" Text="Workspace" VerticalAlignment="Center"/>
                </Grid>
                <TreeView materialDesign:TreeViewAssist.ShowSelection="False" materialDesign:TransitionAssist.DisableTransitions="True" materialDesign:RippleAssist.IsDisabled="True"   DataContext="{Binding Workspace}" ItemsSource="{Binding Children}"  materialDesign:TreeViewAssist.ExpanderSize="2" x:Name="treeView" Margin="10" Grid.Row="1" VerticalAlignment="Stretch">
                    <TreeView.Resources>
                        <DataTemplate x:Key="TreeHeaderTemplate_Folder" DataType="{x:Type Explorer:ExplorerFolder}" >
                            <Grid  >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="12" />
                                    <ColumnDefinition Width="12" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <!--Image Grid.Column="0" VerticalAlignment="Center" Visibility="{Binding Attributes.IsClass, Converter={StaticResource BooleanToVisibilityConverter}}" Width="12" Height="12" Source="Media/Icons/explorer-element-class.png"  /-->
                                <Image Grid.Column="1" VerticalAlignment="Center" Width="12" Height="12" Source="{Binding Attributes, Converter={StaticResource FolderAttributesToImageSourceConverter}}"   />
                                <!--materialDesign:PackIcon Width="12" Height="12" Kind="FolderOutline" VerticalAlignment="Center" /-->
                                <TextBlock Grid.Column="2" Text="{Binding Name}" Margin="4 0 0 0" VerticalAlignment="Center" />
                            </Grid>
                        </DataTemplate>
                        <DataTemplate x:Key="TreeHeaderTemplate_File" DataType="{x:Type Explorer:ExplorerFile}" >
                            <Grid  >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="12" />
                                    <ColumnDefinition Width="12" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Open external" Command="{Binding OpenFileExternalCommand}" />
                                    </ContextMenu>
                                </Grid.ContextMenu>
                                <Image Grid.Column="0" VerticalAlignment="Center" Visibility="{Binding Attributes.IsSeries, Converter={StaticResource BooleanToVisibilityConverter}}" Width="12" Height="12" Source="Media/Icons/explorer-element-series.png"  />
                                <Image Grid.Column="1" VerticalAlignment="Center" Width="12" Height="12" Source="{Binding Attributes, Converter={StaticResource FileAttributesToImageSourceConverter}}"   />
                                <!--materialDesign:PackIcon Width="13"   Kind="FileOutline" VerticalAlignment="Center" /-->
                                <TextBlock Grid.Column="2" Text="{Binding Name}" Margin="8 0 0 0" VerticalAlignment="Center" />
                            </Grid>
                        </DataTemplate>
                        <Style  TargetType="{x:Type TreeViewItem}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="attached:TreeViewItemProperties.FireCommandEventOnExpanded" Value="True"/>
                            <Setter Property="ItemsSource" Value="{Binding Children}"/>
                            <Setter Property="Header" Value="{Binding}"/>

                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="HeaderTemplateSelector" >
                                <Setter.Value>
                                    <TemplateSelectors:ExplorerTreeItemTemplateSelector  />

                                </Setter.Value>
                            </Setter>
                            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="Padding" Value="8"/>
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TreeView}}}"/>
                            <Setter Property="materialDesign:TreeViewAssist.ExpanderSize" Value="16"/>
                            <Setter Property="materialDesign:TreeViewAssist.ShowSelection" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="16"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" Storyboard="{x:Null}" To="Normal">
                                                            <VisualTransition.GeneratedEasingFunction>
                                                                <CubicEase EasingMode="EaseOut"/>
                                                            </VisualTransition.GeneratedEasingFunction>
                                                        </VisualTransition>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="MouseOver">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                                            <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Disabled"/>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="SelectionStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.6" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Selected">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To="0.18" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Unselected"/>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="ExpansionStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0" To="Expanded">
                                                            <VisualTransition.GeneratedEasingFunction>
                                                                <CubicEase EasingMode="EaseOut"/>
                                                            </VisualTransition.GeneratedEasingFunction>
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"/>
                                                                <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost"/>
                                                            </Storyboard>
                                                        </VisualTransition>
                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0" To="Collapsed">
                                                            <VisualTransition.GeneratedEasingFunction>
                                                                <CubicEase EasingMode="EaseOut"/>
                                                            </VisualTransition.GeneratedEasingFunction>
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"/>
                                                                <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost"/>
                                                            </Storyboard>
                                                        </VisualTransition>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Expanded">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"/>
                                                            <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost"/>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <Visibility>Visible</Visibility>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Collapsed">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"/>
                                                            <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost"/>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <Visibility>Collapsed</Visibility>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <materialDesign:ScaleHost  x:Name="ScaleHost" />
                                            <ToggleButton x:Name="Expander" ClickMode="Press" Foreground="{TemplateBinding Foreground}" Height="{TemplateBinding materialDesign:TreeViewAssist.ExpanderSize}" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Margin="0" VerticalAlignment="Center" Width="{TemplateBinding materialDesign:TreeViewAssist.ExpanderSize}">
                                                <ToggleButton.Style>
                                                    <Style TargetType="{x:Type ToggleButton}">
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="Width" Value="16"/>
                                                        <Setter Property="Height" Value="16"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                    <Border Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CheckStates">
                                                                                <VisualStateGroup.Transitions>
                                                                                    <VisualTransition From="Unchecked" GeneratedDuration="0" To="Checked">
                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                        <Storyboard>
                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="45"/>
                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                        </Storyboard>
                                                                                    </VisualTransition>
                                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                                                                        <Storyboard>
                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="45"/>
                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                        </Storyboard>
                                                                                    </VisualTransition>
                                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                                                                        <Storyboard>
                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                        </Storyboard>
                                                                                    </VisualTransition>
                                                                                    <VisualTransition From="Checked" GeneratedDuration="0" To="Unchecked">
                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                        <Storyboard>
                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="45"/>
                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                        </Storyboard>
                                                                                    </VisualTransition>
                                                                                </VisualStateGroup.Transitions>
                                                                                <VisualState x:Name="Checked">
                                                                                    <Storyboard>
                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="45"/>
                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Unchecked">
                                                                                    <Storyboard>
                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <Viewbox>
                                                                            <Canvas Height="24" Width="24">
                                                                                <Path x:Name="ExpandPath" Data="M8.59,16.58L13.17,12 8.59,7.41 10,6 16,12 10,18 8.59,16.58z" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True" Stroke="{TemplateBinding Foreground}">
                                                                                    <Path.RenderTransform>
                                                                                        <TransformGroup>
                                                                                            <ScaleTransform/>
                                                                                            <SkewTransform/>
                                                                                            <RotateTransform Angle="0" CenterY="4" CenterX="4"/>
                                                                                            <TranslateTransform/>
                                                                                        </TransformGroup>
                                                                                    </Path.RenderTransform>
                                                                                </Path>
                                                                            </Canvas>
                                                                        </Viewbox>
                                                                    </Border>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>
                                            <Border x:Name="MouseOverBorder" Grid.ColumnSpan="2" Grid.Column="1" IsHitTestVisible="False" Opacity="0">
                                                <Border.Background>
                                                    <TemplateBinding Property="Foreground">
                                                        <TemplateBinding.Converter>
                                                            <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                        </TemplateBinding.Converter>
                                                    </TemplateBinding>
                                                </Border.Background>
                                            </Border>
                                            <Border x:Name="SelectedBorder" Grid.ColumnSpan="2" Grid.Column="1" IsHitTestVisible="False" Opacity="0">
                                                <Border.Background>
                                                    <TemplateBinding Property="Foreground">
                                                        <TemplateBinding.Converter>
                                                            <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                        </TemplateBinding.Converter>
                                                    </TemplateBinding>
                                                </Border.Background>
                                            </Border>
                                            <Grid x:Name="ContentGrid" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Column="1">
                                                <materialDesign:Ripple x:Name="Ripple" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                                    <materialDesign:Ripple.Feedback>
                                                        <TemplateBinding Property="Foreground">
                                                            <TemplateBinding.Converter>
                                                                <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                            </TemplateBinding.Converter>
                                                        </TemplateBinding>
                                                    </materialDesign:Ripple.Feedback>
                                                    <ContentPresenter x:Name="PART_Header"  Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" ContentTemplate="{TemplateBinding HeaderTemplate}"/>
                                                </materialDesign:Ripple>
                                            </Grid>
                                            <ContentControl x:Name="AdditionalContentControl" Grid.ColumnSpan="2" ContentTemplate="{Binding (materialDesign:TreeViewAssist.AdditionalTemplate), RelativeSource={RelativeSource Self}}" Content="{TemplateBinding Header}" Grid.Column="1" Grid.Row="1" Visibility="Collapsed"/>
                                            <StackPanel x:Name="ItemsPanel" Grid.ColumnSpan="2" Grid.Column="1" Margin="-8,0,0,0" Grid.Row="2">
                                                <StackPanel.Height>
                                                    <MultiBinding UpdateSourceTrigger="Default">
                                                        <MultiBinding.Converter>
                                                            <materialDesign:MathMultipleConverter Operation="Multiply"/>
                                                        </MultiBinding.Converter>
                                                        <Binding ElementName="ItemsHost" Path="ActualHeight"/>
                                                        <Binding ElementName="ScaleHost" Path="Scale"/>
                                                    </MultiBinding>
                                                </StackPanel.Height>
                                                <ItemsPresenter x:Name="ItemsHost" Opacity="0" Visibility="Collapsed" VerticalAlignment="Top"/>
                                            </StackPanel>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Value="Visible">
                                                <DataTrigger.Binding>
                                                    <Binding Mode="OneWay" Path="(materialDesign:TreeViewAssist.AdditionalTemplate)" RelativeSource="{RelativeSource Self}">
                                                        <Binding.Converter>
                                                            <materialDesign:NullableToVisibilityConverter NullValue="Collapsed" NotNullValue="Visible"/>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </DataTrigger.Binding>
                                                <Setter Property="Visibility" TargetName="AdditionalContentControl" Value="Visible"/>
                                            </DataTrigger>
                                            <DataTrigger Value="Visible">
                                                <DataTrigger.Binding>
                                                    <Binding Mode="OneWay" Path="(materialDesign:TreeViewAssist.AdditionalTemplateSelector)" RelativeSource="{RelativeSource Self}">
                                                        <Binding.Converter>
                                                            <materialDesign:NullableToVisibilityConverter NullValue="Collapsed" NotNullValue="Visible"/>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </DataTrigger.Binding>
                                                <Setter Property="Visibility" TargetName="AdditionalContentControl" Value="Visible"/>
                                            </DataTrigger>
                                            <Trigger Property="HasItems" Value="False">
                                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.56"/>
                                            </Trigger>
                                            <DataTrigger Binding="{Binding (materialDesign:TreeViewAssist.ShowSelection), RelativeSource={RelativeSource Self}}" Value="False">
                                                <Setter Property="Visibility" TargetName="MouseOverBorder" Value="Collapsed"/>
                                                <!--Setter Property="Visibility" TargetName="SelectedBorder" Value="Collapsed"/-->
                                                <Setter Property="Feedback" TargetName="Ripple" Value="Transparent"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                                    <Setter Property="ItemsPanel">
                                        <Setter.Value>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel IsItemsHost="True"/>
                                            </ItemsPanelTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>



                        <Explorer:ExplorerFile Name="My File 1" x:Key="file1" />
                        <Explorer:ExplorerFolder x:Key="fol1" Name="My Folder 1" />
                    </TreeView.Resources>
                </TreeView>
                <TreeView   materialDesign:TreeViewAssist.ExpanderSize="2" x:Name="treeView_designTime" Margin="10,10,10,0" Grid.Row="1" VerticalAlignment="Top" Visibility="Collapsed">
                    <TreeView.Resources>
                        <!--DataTemplate x:Key="TreeHeaderTemplate_Folder" DataType="{x:Type Explorer:ExplorerFolder}" >
                            <StackPanel  Orientation="Horizontal">
                                <Image VerticalAlignment="Center" Width="12" Height="12" Source="Media/Icons/folder-outline-md-black-12x12-pp.png"  />
                                <TextBlock Text="{Binding Name}" Margin="8 0 0 0" VerticalAlignment="Center" />
                            </StackPanel>
                        </>
                        <DataTemplate x:Key="TreeHeaderTemplate_File" DataType="{x:Type Explorer:ExplorerFile}" >
                            <StackPanel Orientation="Horizontal">
                                <Image VerticalAlignment="Center" Width="12" Height="12" Source="Media/Icons/file-outline-md-black-12x12-pp.png"  />
                                <TextBlock Text="{Binding Name}" Margin="8 0 0 0" VerticalAlignment="Center" />
                            </StackPanel>
                        </DataTemplate-->
                        <Style  TargetType="{x:Type TreeViewItem}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="attached:TreeViewItemProperties.FireCommandEventOnExpanded" Value="True"/>
                            <Setter Property="ItemsSource" Value="{Binding Children}"/>
                            <Setter Property="Header" Value="{Binding}"/>

                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="HeaderTemplateSelector" >
                                <Setter.Value>
                                    <TemplateSelectors:ExplorerTreeItemTemplateSelector  />

                                </Setter.Value>
                            </Setter>
                            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="Padding" Value="8"/>
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TreeView}}}"/>
                            <Setter Property="materialDesign:TreeViewAssist.ExpanderSize" Value="16"/>
                            <Setter Property="materialDesign:TreeViewAssist.ShowSelection" Value="True"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="16"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" Storyboard="{x:Null}" To="Normal">
                                                            <VisualTransition.GeneratedEasingFunction>
                                                                <CubicEase EasingMode="EaseOut"/>
                                                            </VisualTransition.GeneratedEasingFunction>
                                                        </VisualTransition>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Normal"/>
                                                    <VisualState x:Name="MouseOver">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                                            <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Disabled"/>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="SelectionStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.6" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Selected">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To="0.18" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Unselected"/>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="ExpansionStates">
                                                    <VisualStateGroup.Transitions>
                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0" To="Expanded">
                                                            <VisualTransition.GeneratedEasingFunction>
                                                                <CubicEase EasingMode="EaseOut"/>
                                                            </VisualTransition.GeneratedEasingFunction>
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Visible</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"/>
                                                                <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost"/>
                                                            </Storyboard>
                                                        </VisualTransition>
                                                        <VisualTransition From="{x:Null}" GeneratedDuration="0" To="Collapsed">
                                                            <VisualTransition.GeneratedEasingFunction>
                                                                <CubicEase EasingMode="EaseOut"/>
                                                            </VisualTransition.GeneratedEasingFunction>
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                                                                        <DiscreteObjectKeyFrame.Value>
                                                                            <Visibility>Collapsed</Visibility>
                                                                        </DiscreteObjectKeyFrame.Value>
                                                                    </DiscreteObjectKeyFrame>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"/>
                                                                <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost"/>
                                                            </Storyboard>
                                                        </VisualTransition>
                                                    </VisualStateGroup.Transitions>
                                                    <VisualState x:Name="Expanded">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"/>
                                                            <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost"/>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <Visibility>Visible</Visibility>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Collapsed">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost"/>
                                                            <DoubleAnimation Duration="0:0:0.3" To="0" Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost"/>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ItemsHost">
                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <Visibility>Collapsed</Visibility>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <materialDesign:ScaleHost  x:Name="ScaleHost" />
                                            <ToggleButton x:Name="Expander" ClickMode="Press" Foreground="{TemplateBinding Foreground}" Height="{TemplateBinding materialDesign:TreeViewAssist.ExpanderSize}" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Margin="0" VerticalAlignment="Center" Width="{TemplateBinding materialDesign:TreeViewAssist.ExpanderSize}">
                                                <ToggleButton.Style>
                                                    <Style TargetType="{x:Type ToggleButton}">
                                                        <Setter Property="Focusable" Value="False"/>
                                                        <Setter Property="Width" Value="16"/>
                                                        <Setter Property="Height" Value="16"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                    <Border Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                                                        <VisualStateManager.VisualStateGroups>
                                                                            <VisualStateGroup x:Name="CheckStates">
                                                                                <VisualStateGroup.Transitions>
                                                                                    <VisualTransition From="Unchecked" GeneratedDuration="0" To="Checked">
                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                        <Storyboard>
                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="45"/>
                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                        </Storyboard>
                                                                                    </VisualTransition>
                                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Unchecked">
                                                                                        <Storyboard>
                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="45"/>
                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                        </Storyboard>
                                                                                    </VisualTransition>
                                                                                    <VisualTransition From="{x:Null}" GeneratedDuration="0" GeneratedEasingFunction="{x:Null}" To="Checked">
                                                                                        <Storyboard>
                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                        </Storyboard>
                                                                                    </VisualTransition>
                                                                                    <VisualTransition From="Checked" GeneratedDuration="0" To="Unchecked">
                                                                                        <VisualTransition.GeneratedEasingFunction>
                                                                                            <QuarticEase EasingMode="EaseOut"/>
                                                                                        </VisualTransition.GeneratedEasingFunction>
                                                                                        <Storyboard>
                                                                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                                <EasingDoubleKeyFrame KeyTime="0" Value="45"/>
                                                                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                            </DoubleAnimationUsingKeyFrames>
                                                                                        </Storyboard>
                                                                                    </VisualTransition>
                                                                                </VisualStateGroup.Transitions>
                                                                                <VisualState x:Name="Checked">
                                                                                    <Storyboard>
                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="45"/>
                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                                <VisualState x:Name="Unchecked">
                                                                                    <Storyboard>
                                                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ExpandPath">
                                                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                                                                        </DoubleAnimationUsingKeyFrames>
                                                                                    </Storyboard>
                                                                                </VisualState>
                                                                            </VisualStateGroup>
                                                                        </VisualStateManager.VisualStateGroups>
                                                                        <Viewbox>
                                                                            <Canvas Height="24" Width="24">
                                                                                <Path x:Name="ExpandPath" Data="M8.59,16.58L13.17,12 8.59,7.41 10,6 16,12 10,18 8.59,16.58z" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="True" Stroke="{TemplateBinding Foreground}">
                                                                                    <Path.RenderTransform>
                                                                                        <TransformGroup>
                                                                                            <ScaleTransform/>
                                                                                            <SkewTransform/>
                                                                                            <RotateTransform Angle="0" CenterY="4" CenterX="4"/>
                                                                                            <TranslateTransform/>
                                                                                        </TransformGroup>
                                                                                    </Path.RenderTransform>
                                                                                </Path>
                                                                            </Canvas>
                                                                        </Viewbox>
                                                                    </Border>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>
                                            <Border x:Name="MouseOverBorder" Grid.ColumnSpan="2" Grid.Column="1" IsHitTestVisible="False" Opacity="0">
                                                <Border.Background>
                                                    <TemplateBinding Property="Foreground">
                                                        <TemplateBinding.Converter>
                                                            <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                        </TemplateBinding.Converter>
                                                    </TemplateBinding>
                                                </Border.Background>
                                            </Border>
                                            <Border x:Name="SelectedBorder" Grid.ColumnSpan="2" Grid.Column="1" IsHitTestVisible="False" Opacity="0">
                                                <Border.Background>
                                                    <TemplateBinding Property="Foreground">
                                                        <TemplateBinding.Converter>
                                                            <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                        </TemplateBinding.Converter>
                                                    </TemplateBinding>
                                                </Border.Background>
                                            </Border>
                                            <Grid x:Name="ContentGrid" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Column="1">
                                                <materialDesign:Ripple  x:Name="Ripple" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" IsEnabled="False">
                                                    <ContentPresenter x:Name="PART_Header"  Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" ContentTemplate="{TemplateBinding HeaderTemplate}"/>
                                                </materialDesign:Ripple>
                                            </Grid>
                                            <ContentControl x:Name="AdditionalContentControl" Grid.ColumnSpan="2" ContentTemplate="{Binding (materialDesign:TreeViewAssist.AdditionalTemplate), RelativeSource={RelativeSource Self}}" Content="{TemplateBinding Header}" Grid.Column="1" Grid.Row="1" Visibility="Collapsed"/>
                                            <StackPanel x:Name="ItemsPanel" Grid.ColumnSpan="2" Grid.Column="1" Margin="-8,0,0,0" Grid.Row="2">
                                                <StackPanel.Height>
                                                    <MultiBinding UpdateSourceTrigger="Default">
                                                        <MultiBinding.Converter>
                                                            <materialDesign:MathMultipleConverter Operation="Multiply"/>
                                                        </MultiBinding.Converter>
                                                        <Binding ElementName="ItemsHost" Path="ActualHeight"/>
                                                        <Binding ElementName="ScaleHost" Path="Scale"/>
                                                    </MultiBinding>
                                                </StackPanel.Height>
                                                <ItemsPresenter x:Name="ItemsHost" Opacity="0" Visibility="Collapsed" VerticalAlignment="Top"/>
                                            </StackPanel>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Value="Visible">
                                                <DataTrigger.Binding>
                                                    <Binding Mode="OneWay" Path="(materialDesign:TreeViewAssist.AdditionalTemplate)" RelativeSource="{RelativeSource Self}">
                                                        <Binding.Converter>
                                                            <materialDesign:NullableToVisibilityConverter NullValue="Collapsed" NotNullValue="Visible"/>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </DataTrigger.Binding>
                                                <Setter Property="Visibility" TargetName="AdditionalContentControl" Value="Visible"/>
                                            </DataTrigger>
                                            <DataTrigger Value="Visible">
                                                <DataTrigger.Binding>
                                                    <Binding Mode="OneWay" Path="(materialDesign:TreeViewAssist.AdditionalTemplateSelector)" RelativeSource="{RelativeSource Self}">
                                                        <Binding.Converter>
                                                            <materialDesign:NullableToVisibilityConverter NullValue="Collapsed" NotNullValue="Visible"/>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </DataTrigger.Binding>
                                                <Setter Property="Visibility" TargetName="AdditionalContentControl" Value="Visible"/>
                                            </DataTrigger>
                                            <Trigger Property="HasItems" Value="False">
                                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.56"/>
                                            </Trigger>
                                            <DataTrigger Binding="{Binding (materialDesign:TreeViewAssist.ShowSelection), RelativeSource={RelativeSource Self}}" Value="False">
                                                <Setter Property="Visibility" TargetName="MouseOverBorder" Value="Collapsed"/>
                                                <Setter Property="Visibility" TargetName="SelectedBorder" Value="Collapsed"/>
                                                <Setter Property="Feedback" TargetName="Ripple" Value="Transparent"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                                    <Setter Property="ItemsPanel">
                                        <Setter.Value>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel IsItemsHost="True"/>
                                            </ItemsPanelTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>



                        <Explorer:ExplorerFile Name="My File 1" x:Key="file1" />
                        <Explorer:ExplorerFolder x:Key="fol1" Name="My Folder 1" />
                    </TreeView.Resources>
                    <TreeViewItem   materialDesign:TreeViewAssist.ExpanderSize="16"  Header="My Folder 1"  IsExpanded="True" Padding="2 6" Visibility="Collapsed" >

                        <TreeViewItem   DataContext="{StaticResource fol1}" Header="{Binding}"  Padding="2 6" IsExpanded="True">
                            <TreeViewItem DataContext="{StaticResource file1}" Header="{Binding}"  Padding="2 6"/>
                        </TreeViewItem>
                        <TreeViewItem Header="TreeViewItem"  Padding="2 6">
                            <TreeViewItem Header="TreeViewItem"  IsExpanded="True" Padding="2 6">
                                <TreeViewItem Header="TreeViewItem" Padding="2 6"/>
                            </TreeViewItem>
                        </TreeViewItem>
                    </TreeViewItem>
                    <TreeViewItem attached:TreeViewItemProperties.FireCommandEventOnExpanded="True" Header="{Binding}"   DataContext="{Binding Workspace}" ItemsSource="{Binding Children}" Padding="2"/>
                </TreeView>

            </Grid>

        </Border>
        <Border x:Name="STATS" DockPanel.Dock="Bottom" Height="200" BorderBrush="{DynamicResource MaterialDesignDivider}" BorderThickness="1" Visibility="{Binding IsStatsPanelVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid Height="32" VerticalAlignment="Top" Background="#FFF3F3F3" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1">
                        <Button x:Name="button1" Command="{Binding ShowHidePanelCommand}" CommandParameter="StatsPanel:false" Style="{DynamicResource MaterialDesignFlatButton}" Foreground="{DynamicResource MaterialDesignBody}"  HorizontalAlignment="Center" Padding="0" VerticalAlignment="Center" Height="18" Width="18" Margin="4" >
                            <Custom:PackIconBootstrapIcons Kind="X" Width="10" Height="10"/>
                        </Button>
                    </StackPanel>
                    <TextBlock x:Name="textBlock1" HorizontalAlignment="Left" Margin="10,0,0,0" TextWrapping="Wrap" Text="Analytics" VerticalAlignment="Center"/>
                </Grid>

                <View:StatsView Grid.Row="1" Margin="0"/>

            </Grid>

        </Border>
        <Grid x:Name="Main" >
            <TabControl   Foreground="{DynamicResource MaterialDesignBody}" Background="{DynamicResource MaterialDesignPaper}" ItemsSource="{Binding Tabs}" IsSynchronizedWithCurrentItem="True" SelectedItem="{Binding CurrentSelectedTab}" BorderThickness="0,1,0,0" ItemContainerStyle="{DynamicResource TabItemStyle}" />
            <Grid Visibility="Collapsed">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="146*"/>
                    <ColumnDefinition Width="371*"/>
                </Grid.ColumnDefinitions>
                <ListBox x:Name="listBox" ItemsSource="{Binding CurrentSemesterViewModel.ClassesVMS}" >
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <CheckBox Content="{Binding Name}" IsChecked="{Binding IsAccomplished}"/>
                                <ProgressBar  Style="{StaticResource MaterialDesignCircularProgressBar}"   Value="{Binding DiscretProgressAsFloat, Mode=OneWay}" Margin="6,0,0,0"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <View:ClassView Grid.Column="1" DataContext="{Binding SelectedItem, ElementName=listBox}" />
            </Grid>
        </Grid>

    </DockPanel>
</Window>
